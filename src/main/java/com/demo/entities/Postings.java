package com.demo.entities;
// Generated Apr 26, 2024, 6:17:41 PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.*;

/**
 * Postings generated by hbm2java
 */
@Entity
@Table(name = "postings", catalog = "vietnamjobs")
public class Postings implements java.io.Serializable {

	private Integer id;
	private Category category;
	private Employer employer;
	private Experience experience;
	private Local local;
	private Rank rank;
	private Type type;
	private Wage wage;
	private String title;
	private String description;
	private Date created;
	private Date deadline;
	private String gender;
	private int quantity;
	private boolean status;
	private Set<ApplicationHistory> applicationHistories = new HashSet<ApplicationHistory>(0);
	private Set<Payment> payments = new HashSet<Payment>(0);
	private Set<CheckNews> checkNewses = new HashSet<CheckNews>(0);

	public Postings() {
	}

	public Postings(Category category, Employer employer, Experience experience, Local local, Rank rank, Type type,
			Wage wage, String title, String description, Date created, Date deadline, String gender, int quantity,
			boolean status) {
		this.category = category;
		this.employer = employer;
		this.experience = experience;
		this.local = local;
		this.rank = rank;
		this.type = type;
		this.wage = wage;
		this.title = title;
		this.description = description;
		this.created = created;
		this.deadline = deadline;
		this.gender = gender;
		this.quantity = quantity;
		this.status = status;
	}

	public Postings(Category category, Employer employer, Experience experience, Local local, Rank rank, Type type,
			Wage wage, String title, String description, Date created, Date deadline, String gender, int quantity,
			boolean status, Set<ApplicationHistory> applicationHistories, Set<Payment> payments,
			Set<CheckNews> checkNewses) {
		this.category = category;
		this.employer = employer;
		this.experience = experience;
		this.local = local;
		this.rank = rank;
		this.type = type;
		this.wage = wage;
		this.title = title;
		this.description = description;
		this.created = created;
		this.deadline = deadline;
		this.gender = gender;
		this.quantity = quantity;
		this.status = status;
		this.applicationHistories = applicationHistories;
		this.payments = payments;
		this.checkNewses = checkNewses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employer_id", nullable = false)
	public Employer getEmployer() {
		return this.employer;
	}

	public void setEmployer(Employer employer) {
		this.employer = employer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "experience_id", nullable = false)
	public Experience getExperience() {
		return this.experience;
	}

	public void setExperience(Experience experience) {
		this.experience = experience;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "local_id", nullable = false)
	public Local getLocal() {
		return this.local;
	}

	public void setLocal(Local local) {
		this.local = local;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rank_id", nullable = false)
	public Rank getRank() {
		return this.rank;
	}

	public void setRank(Rank rank) {
		this.rank = rank;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id", nullable = false)
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "wage_id", nullable = false)
	public Wage getWage() {
		return this.wage;
	}

	public void setWage(Wage wage) {
		this.wage = wage;
	}

	@Column(name = "title", nullable = false, length = 250)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "description", nullable = false, length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "deadline", nullable = false, length = 10)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

	@Column(name = "gender", nullable = false, length = 250)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postings")
	public Set<ApplicationHistory> getApplicationHistories() {
		return this.applicationHistories;
	}

	public void setApplicationHistories(Set<ApplicationHistory> applicationHistories) {
		this.applicationHistories = applicationHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postings")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postings")
	public Set<CheckNews> getCheckNewses() {
		return this.checkNewses;
	}

	public void setCheckNewses(Set<CheckNews> checkNewses) {
		this.checkNewses = checkNewses;
	}

}
