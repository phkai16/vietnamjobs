package com.demo.entities;
// Generated Apr 26, 2024, 6:17:41 PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.*;


/**
 * account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "vietnamjobs")
public class Account implements java.io.Serializable {

	private Integer id;
	private TypeAccount typeAccount;
	private String username;
	private String password;
	private Date created;
	private String email;
	private boolean status;
	private String securityCode;
	private double wallet;
	private Set<Seeker> seekers = new HashSet<Seeker>(0);
	private Set<Admin> admins = new HashSet<Admin>(0);
	private Set<Employer> employers = new HashSet<Employer>(0);
	private Set<TransactionHistory> transactionHistories = new HashSet<TransactionHistory>(0);

	public Account() {
	}

	public Account(TypeAccount typeAccount, String username, String password, Date created, String email,
			boolean status, String securityCode, double wallet) {
		this.typeAccount = typeAccount;
		this.username = username;
		this.password = password;
		this.created = created;
		this.email = email;
		this.status = status;
		this.securityCode = securityCode;
		this.wallet = wallet;
	}

	public Account(TypeAccount typeAccount, String username, String password, Date created, String email,
			boolean status, String securityCode, double wallet, Set<Seeker> seekers, Set<Admin> admins,
			Set<Employer> employers, Set<TransactionHistory> transactionHistories) {
		this.typeAccount = typeAccount;
		this.username = username;
		this.password = password;
		this.created = created;
		this.email = email;
		this.status = status;
		this.securityCode = securityCode;
		this.wallet = wallet;
		this.seekers = seekers;
		this.admins = admins;
		this.employers = employers;
		this.transactionHistories = transactionHistories;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_account", nullable = false)
	public TypeAccount getTypeAccount() {
		return this.typeAccount;
	}

	public void setTypeAccount(TypeAccount typeAccount) {
		this.typeAccount = typeAccount;
	}

	@Column(name = "username", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "email", nullable = false, length = 400)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@Column(name = "security_code", nullable = false, length = 250)
	public String getSecurityCode() {
		return this.securityCode;
	}

	public void setSecurityCode(String securityCode) {
		this.securityCode = securityCode;
	}

	@Column(name = "wallet", nullable = false, precision = 22, scale = 0)
	public double getWallet() {
		return this.wallet;
	}

	public void setWallet(double wallet) {
		this.wallet = wallet;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Seeker> getSeekers() {
		return this.seekers;
	}

	public void setSeekers(Set<Seeker> seekers) {
		this.seekers = seekers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Admin> getAdmins() {
		return this.admins;
	}

	public void setAdmins(Set<Admin> admins) {
		this.admins = admins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Employer> getEmployers() {
		return this.employers;
	}

	public void setEmployers(Set<Employer> employers) {
		this.employers = employers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<TransactionHistory> getTransactionHistories() {
		return this.transactionHistories;
	}

	public void setTransactionHistories(Set<TransactionHistory> transactionHistories) {
		this.transactionHistories = transactionHistories;
	}

}
